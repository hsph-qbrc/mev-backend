#! /bin/bash

# For local, Vagrant-based builds, most of the environment variables can be set to 
# simple defaults as set in deploy/puppet/mevapi/data/platform/virtualbox.yaml

# However, one can also override a subset of these variables by setting environment variables
# which are read by the Vagrantfile. 
# This file provides the available variable subset which can be customized. 
# Note that most are commented out-- uncomment as necessary to achieve the customization required.

# Source/export this file to set environment variables prior to running
# `vagrant up`


######################### Django-related parameters ######################################

# For automatically creating an admin.
# Note that we use emails as usernames in this app., supply the following:
DJANGO_SUPERUSER_PASSWORD="someSimplePass123"
DJANGO_SUPERUSER_EMAIL="root@localhost"

# Don't change this:
# We employ a user database model which relies on the email instead of a 
# username. However, still need to define this environment variable
# for Django's createsuperuser command to work
DJANGO_SUPERUSER_USERNAME=$DJANGO_SUPERUSER_EMAIL


####################### END Django-related parameters ###################################


############################ Email-related parameters ######################################

# How to send email-- by default, we print emails to the console for dev
# If you would like to set another email backend (e.g. gmail), set this accordingly.
# See the docs and/or base_settings.py in the relevant section regarding email.
# To use gmail in your local vagrant build, uncomment. Otherwise, the email backend
# will be the default of CONSOLE
# EMAIL_BACKEND_CHOICE="GMAIL"

# When email is sent, this will give the "from" field.  
# e.g. "some name <some@email.com>" (without the quotes)
# Can leave as-is for local dev
# FROM_EMAIL="WebMEV <qbrc@g.harvard.edu>"

# If using Gmail for your email service, specify the following:
# See docs for how to get these values.
# For local dev, can leave blank. However, since it's an API
# call, you can certainly get the credentials and enable sending
# of emails via the Gmail API
# GMAIL_ACCESS_TOKEN=""
# GMAIL_REFRESH_TOKEN=""
# GMAIL_CLIENT_ID=""
# GMAIL_CLIENT_SECRET=""

# A comma-delimited list of emails for admins
# Can leave as-is for local dev unless you are testing using
# the actual email functions
# ADMIN_EMAIL_CSV=""
########################## END Email-related parameters #####################################



############################ Docker related parameters ######################################

# These variables control how we interact with the container registry. We only allow a single
# registry such as github or dockerhub. See the code (api/container_registries/__init__.py)
# for available options. Further explanation can be found in mev/mev/base_settings.py
# By default, the variables are set to github and "web-mev" which allows for pulling
# from the public Docker images available through the WebMeV github repo. If you wish
# to pull from your own repository of images, change as necessary
#CONTAINER_REGISTRY="github"
#DOCKER_REPO_ORG="web-mev"

############################ END Docker related parameters ######################################
