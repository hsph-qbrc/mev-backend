{
  "openapi": "3.0.2",
  "info": {
    "title": "WebMEV REST API Specification",
    "version": ""
  },
  "paths": {
    "/api/users/": {
      "get": {
        "operationId": "listUsers",
        "description": "Lists User instances.\n\nAdmins can view and create new users.\nNon-admin users can only view their own information.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createUser",
        "description": "Lists User instances.\n\nAdmins can view and create new users.\nNon-admin users can only view their own information.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/{user_uuid}/": {
      "get": {
        "operationId": "retrieveCustomUser",
        "description": "Retrieves a specific user.\n\nAdmins may view/modify/delete any user.\n\nNon-admins may only view/modify/delete their own user instance.",
        "parameters": [
          {
            "name": "user_uuid",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateCustomUser",
        "description": "Retrieves a specific user.\n\nAdmins may view/modify/delete any user.\n\nNon-admins may only view/modify/delete their own user instance.",
        "parameters": [
          {
            "name": "user_uuid",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateCustomUser",
        "description": "Retrieves a specific user.\n\nAdmins may view/modify/delete any user.\n\nNon-admins may only view/modify/delete their own user instance.",
        "parameters": [
          {
            "name": "user_uuid",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyCustomUser",
        "description": "Retrieves a specific user.\n\nAdmins may view/modify/delete any user.\n\nNon-admins may only view/modify/delete their own user instance.",
        "parameters": [
          {
            "name": "user_uuid",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/": {
      "get": {
        "operationId": "listWorkspaces",
        "description": "Lists available Workspace instances.\n\nAdmins can list all available Workspaces.\n\nNon-admin users can only view their own Workspaces.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createWorkspace",
        "description": "Lists available Workspace instances.\n\nAdmins can list all available Workspaces.\n\nNon-admin users can only view their own Workspaces.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{id}/": {
      "get": {
        "operationId": "retrieveWorkspace",
        "description": "Retrieves a specific Workspace instance.\n\nAdmins may access any user's Workspace.\n\nNon-admin users may only access their own Workspace instances.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this workspace.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateWorkspace",
        "description": "Retrieves a specific Workspace instance.\n\nAdmins may access any user's Workspace.\n\nNon-admin users may only access their own Workspace instances.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this workspace.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateWorkspace",
        "description": "Retrieves a specific Workspace instance.\n\nAdmins may access any user's Workspace.\n\nNon-admin users may only access their own Workspace instances.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this workspace.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyWorkspace",
        "description": "Retrieves a specific Workspace instance.\n\nAdmins may access any user's Workspace.\n\nNon-admin users may only access their own Workspace instances.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this workspace.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/": {
      "get": {
        "operationId": "listResources",
        "description": "Lists available Resource instances.\n\nAdmins can list all available Resources.\n\nNon-admin users can only view their own Resources.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Resource"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createResource",
        "description": "Lists available Resource instances.\n\nAdmins can list all available Resources.\n\nNon-admin users can only view their own Resources.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/": {
      "get": {
        "operationId": "retrieveResource",
        "description": "Retrieves a specific Resource instance.\n\nAdmins can get/modify any Resource.\n\nNon-admin users can only view/edit their own Resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this resource.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateResource",
        "description": "Retrieves a specific Resource instance.\n\nAdmins can get/modify any Resource.\n\nNon-admin users can only view/edit their own Resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this resource.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateResource",
        "description": "Retrieves a specific Resource instance.\n\nAdmins can get/modify any Resource.\n\nNon-admin users can only view/edit their own Resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this resource.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyResource",
        "description": "Retrieves a specific Resource instance.\n\nAdmins can get/modify any Resource.\n\nNon-admin users can only view/edit their own Resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this resource.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/contents/": {
      "get": {
        "operationId": "listResourceContents",
        "description": "Returns the full data underlying a Resource.\n\nTypically used for small files so that user-interfaces can display\ndata\n\nDepending on the data, the format of the response may be different.\nAdditionally, some Resource types do not support a preview.\n\nThis returns a JSON-format representation of the data.\n\nThis endpoint is only really sensible for certain types of \nResources, such as those in table format.  Other types, such as \nsequence-based files do not have this functionality.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/metadata/": {
      "get": {
        "operationId": "retrieveResourceMetadata",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadata"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/metadata/observations/": {
      "get": {
        "operationId": "retrieveResourceMetadataObservations",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataObservations"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/metadata/features/": {
      "get": {
        "operationId": "retrieveResourceMetadataFeatures",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataFeatures"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/{id}/metadata/parent/": {
      "get": {
        "operationId": "retrieveResourceMetadataParentOperation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataParentOperation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/upload/progress": {
      "get": {
        "operationId": "listServerLocalResourceUploadProgress",
        "description": "Endpoint for checking the progress of an upload.\n\nRequests must contain a \"X-Progress-ID\" header to identify\nthe upload they are monitoring.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/download/{id}/": {
      "get": {
        "operationId": "retrieveResourceDownload",
        "description": "Request endpoint for downloading a file.\n\nWe don't want to initiate these types of downloads for large files,\nso we limit the size.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resource-types/": {
      "get": {
        "operationId": "listResourceTypes",
        "description": "Lists available Resource types.\n\nUsers can set their files to one of these types.\n\nTypically used for populating selections.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceType"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{workspace_pk}/resources/": {
      "get": {
        "operationId": "listWorkspaceResources",
        "description": "Lists available Resource instances for a particular Workspace.\n\nAdmins can list all available Resources, but non-admin users \ncan only view their own Resources.",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceResource"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{workspace_pk}/resources/{resource_pk}/remove/": {
      "get": {
        "operationId": "listWorkspaceResourceRemoves",
        "description": "This endpoint removes a Resource from a specific Workspace. Note that\nResources used in one or more Operations cannot be removed from the Workspace\nso that the integrity of analysis workflows is maintained.",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{workspace_pk}/metadata/observations/": {
      "get": {
        "operationId": "listNullableObservations",
        "description": "This class will send a set of Observation instances that reside\nin a given workspace. \n\nNote that we do NOT use the ObservationSetSerializer class (or its\nnullable sibling) since we can't paginate an ObservationSet. To paginate,\nthe \"top level\" of the data structure has to be an iterable. We do, however,\nrely on all the set-like methods that are available on the ObservationSet\nclass to prep the data structure. We then extract the elements attribute/field\nand give that to the serializer.",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NullableObservation"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{workspace_pk}/metadata/features/": {
      "get": {
        "operationId": "listNullableFeatures",
        "description": "",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NullableFeature"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operation-resources/{operation_uuid}/": {
      "get": {
        "operationId": "retrieveOperationResource",
        "description": "Lists available OperationResource instances for\na particular Operation. Includes the OperationResources\nfor all fields",
        "parameters": [
          {
            "name": "operation_uuid",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operation-resources/{operation_uuid}/{input_field}/": {
      "get": {
        "operationId": "retrieveOperationResource",
        "description": "Lists available OperationResource instances for\na particular input field of Operation.",
        "parameters": [
          {
            "name": "operation_uuid",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "input_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResource"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operations/": {
      "get": {
        "operationId": "listOperations",
        "description": "Lists available Operation instances.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Operation"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operations/{operation_uuid}/": {
      "get": {
        "operationId": "retrieveOperation",
        "description": "Returns specific Operation instances. Note that we only permit GET operations\nas this is the only way users should be able to access the Operation table.\nSpecific operations like modifications can only be performed by admins",
        "parameters": [
          {
            "name": "operation_uuid",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/executed-operations/": {
      "get": {
        "operationId": "listExecutedOperations",
        "description": "Lists all the ExecutedOperations, both workspace and \nnon-workspace associated.\n\nAdmins can list all, while other users can only see ExecutedOperations\nthat they own",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/executed-operations/workspace/{workspace_pk}/": {
      "get": {
        "operationId": "retrieveWorkspaceExecutedOperationList",
        "description": "Lists available ExecutedOperation instances for a given Workspace.\n\nAdmins can list all available executedOperations in a Workspace.\n\nNon-admin users can only view ExecutedOperations on Workspaces they own.",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/executed-operations/workspace/{workspace_pk}/tree/": {
      "get": {
        "operationId": "listWorkspaceTrees",
        "description": "",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/executed-operations/workspace/{workspace_pk}/tree/save/": {
      "get": {
        "operationId": "listWorkspaceTreeSaves",
        "description": "",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/executed-operations/{exec_op_uuid}/": {
      "get": {
        "operationId": "retrieveExecutedOperationCheck",
        "description": "Checks the status of an ExecutedOperation.\n\nIf the ExecutedOperation is still running, nothing happens.\nIf the ExecutedOperation has completed, runs some final steps, such as\nregistering output files with the user, performing cleanup, etc.",
        "parameters": [
          {
            "name": "exec_op_uuid",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operation-categories/": {
      "get": {
        "operationId": "listOperationCategoryLists",
        "description": "Returns a mapping of operation categories to the corresponding `Operation`s.\nPrimarily used for populating a user-interface and grouping `Operation`s by\ntheir type.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationCategoryList"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operation-categories/{category}/": {
      "get": {
        "operationId": "retrieveOperation",
        "description": "Returns a list of the `Operation`s associated with the category\npassed as part of the url",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/": {
      "get": {
        "operationId": "listApiRoots",
        "description": "Lists the available \"base\" endpoints.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/token/": {
      "post": {
        "operationId": "createAuthToken",
        "description": "This endpoint allows a client to submit an email/password\nand receive a JWT token (and refresh token)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/token/refresh/": {
      "post": {
        "operationId": "createRefreshAuthToken",
        "description": "Endpoint for refreshing the JWT auth token.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshAuthToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RefreshAuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RefreshAuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshAuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/register/": {
      "post": {
        "operationId": "createUserRegister",
        "description": "Used to register a new user by email/password",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegister"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/activate/": {
      "post": {
        "operationId": "createUserActivate",
        "description": "This validates the uid/token and activates the user once they click on\nthe link in their email",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActivate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserActivate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserActivate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/resend-activation/": {
      "post": {
        "operationId": "createResendActivation",
        "description": "If a user's token expires, they exist in our system, but can't\nactivate.  This sends them another email with a new token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendActivation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResendActivation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResendActivation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendActivation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/reset-password/confirm/": {
      "post": {
        "operationId": "createPasswordResetConfirm",
        "description": "Used when a user has clicked on a reset link\nand is sending a UID (encoded), a token, a new password,\nand a re-typed confirmation of that password",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetConfirm"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/reset-password/": {
      "post": {
        "operationId": "createPasswordReset",
        "description": "Used when a user has forgotten password and\nwants to reset.  Initiates the reset flow\nincluding the sending of confirmation password.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordReset"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/change-password/": {
      "post": {
        "operationId": "createPasswordChange",
        "description": "For changing password (once authenticated)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChange"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/users/social/google/": {
      "post": {
        "operationId": "createSocialAuthToken",
        "description": "This endpoint allows a client to exchange a google access token\nfor a WebMEV JWT token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAuthToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SocialAuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SocialAuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/add-bucket-resources/": {
      "post": {
        "operationId": "createAddBucketResource",
        "description": "This view is used to create a new user-associated resource given\na path to a bucket-based file. \n\nUse-cases for this endpoint are where we have example or public data files\nwhich we would like to attach to a particular user. The tutorial files are\nan example of this. Thus, the user does not have to download and then \nsubsequently upload to run through the tutorial example.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/upload/": {
      "post": {
        "operationId": "createUpload",
        "description": "Endpoint for a direct upload to the server.",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Upload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/resources/dropbox-upload/": {
      "post": {
        "operationId": "createDropboxUpload",
        "description": "Endpoint for uploading resources from Dropbox\n\nDepending on the storage backend, the files will be uploaded locally\nor in the remote storage. Either way, the same endpoint is used.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropboxUpload"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DropboxUpload"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DropboxUpload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DropboxUpload"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/workspaces/{workspace_pk}/resources/add/": {
      "post": {
        "operationId": "createWorkspaceResourceAdd",
        "description": "This endpoint adds a Resource instance to a specific Workspace.",
        "parameters": [
          {
            "name": "workspace_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/metadata/intersect/": {
      "post": {
        "operationId": "createMetadataIntersect",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/metadata/union/": {
      "post": {
        "operationId": "createMetadataUnion",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/metadata/set-difference/": {
      "post": {
        "operationId": "createMetadataSetDifference",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operations/add/": {
      "post": {
        "operationId": "createOperation",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operations/run/": {
      "post": {
        "operationId": "createOperationRun",
        "description": "Starts the execution of an Operation",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operation-categories-add/": {
      "post": {
        "operationId": "createOperationCategoryAdd",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/operations/{id}/update/": {
      "patch": {
        "operationId": "partialUpdateOperationUpdate",
        "description": "Note that this method will NOT update aspects of the operation itself,\nsuch as the inputs, outputs, etc. as that breaks the principle that the\noperations are immutable once ingested. Rather, this only updates fields\nof the Operation database objects, which is more appropriately considered\nas metadata about the actual operation JSON object. For instance, you can\nuse this endpoint to set the 'active' status, etc.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace_name": {
            "type": "string",
            "maxLength": 100
          },
          "owner_email": {
            "type": "string",
            "format": "email"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "resource_type": {
            "enum": [
              "FQ",
              "FA",
              "ALN",
              "FT",
              "MTX",
              "I_MTX",
              "EXP_MTX",
              "RNASEQ_COUNT_MTX",
              "ANN",
              "BED",
              "JSON",
              "*"
            ],
            "type": "string",
            "nullable": true
          },
          "owner_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "maxLength": 2000
          },
          "workspaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "workspace_name": {
                  "type": "string",
                  "maxLength": 100
                },
                "owner_email": {
                  "type": "string",
                  "format": "email"
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            },
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "writeOnly": true
          },
          "size": {
            "type": "integer",
            "readOnly": true
          },
          "readable_resource_type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ResourceMetadata": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "parent_operation": {
            "type": "string",
            "nullable": true
          },
          "observation_set": {
            "type": "object",
            "properties": {
              "multiple": {
                "type": "boolean"
              },
              "elements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "attributes": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            },
            "required": [
              "multiple"
            ],
            "nullable": true
          },
          "feature_set": {
            "type": "object",
            "properties": {
              "multiple": {
                "type": "boolean"
              },
              "elements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "attributes": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            },
            "required": [
              "multiple"
            ],
            "nullable": true
          }
        },
        "required": [
          "resource"
        ]
      },
      "ResourceMetadataObservations": {
        "type": "object",
        "properties": {
          "observation_set": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ResourceMetadataFeatures": {
        "type": "object",
        "properties": {
          "feature_set": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ResourceMetadataParentOperation": {
        "type": "object",
        "properties": {
          "parent_operation": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResourceType": {
        "type": "object",
        "properties": {
          "resource_type_key": {
            "type": "string",
            "maxLength": 50
          },
          "resource_type_title": {
            "type": "string",
            "maxLength": 250
          },
          "resource_type_description": {
            "type": "string",
            "maxLength": 2000
          },
          "example": {
            "type": "object"
          }
        },
        "required": [
          "resource_type_key",
          "resource_type_title",
          "resource_type_description",
          "example"
        ]
      },
      "WorkspaceResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "resource_type": {
            "enum": [
              "FQ",
              "FA",
              "ALN",
              "FT",
              "MTX",
              "I_MTX",
              "EXP_MTX",
              "RNASEQ_COUNT_MTX",
              "ANN",
              "BED",
              "JSON",
              "*"
            ],
            "type": "string",
            "nullable": true
          },
          "owner_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "maxLength": 2000
          },
          "workspaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                },
                "workspace_name": {
                  "type": "string",
                  "maxLength": 100
                },
                "owner_email": {
                  "type": "string",
                  "format": "email"
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            },
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "writeOnly": true
          },
          "size": {
            "type": "integer",
            "readOnly": true
          },
          "readable_resource_type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "NullableObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50
          },
          "attributes": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "NullableFeature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50
          },
          "attributes": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "OperationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "default": "",
            "maxLength": 255
          },
          "input_field": {
            "type": "string",
            "maxLength": 255
          },
          "operation": {
            "type": "string"
          },
          "resource_type": {
            "enum": [
              "FQ",
              "FA",
              "ALN",
              "FT",
              "MTX",
              "I_MTX",
              "EXP_MTX",
              "RNASEQ_COUNT_MTX",
              "ANN",
              "BED",
              "JSON",
              "*"
            ],
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "writeOnly": true
          },
          "size": {
            "type": "integer",
            "readOnly": true
          },
          "readable_resource_type": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "input_field",
          "operation"
        ]
      },
      "Operation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 5000
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "git_hash": {
            "type": "string"
          },
          "mode": {
            "type": "string",
            "maxLength": 100
          },
          "inputs": {
            "type": "string"
          },
          "outputs": {
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "workspace_operation": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "repository_url",
          "git_hash",
          "mode",
          "inputs",
          "outputs",
          "repo_name",
          "workspace_operation"
        ]
      },
      "OperationCategoryList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true,
            "maxLength": 200
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "maxLength": 100
                },
                "description": {
                  "type": "string",
                  "maxLength": 5000
                },
                "repository_url": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                },
                "git_hash": {
                  "type": "string"
                },
                "mode": {
                  "type": "string",
                  "maxLength": 100
                },
                "inputs": {
                  "type": "string"
                },
                "outputs": {
                  "type": "string"
                },
                "repo_name": {
                  "type": "string"
                },
                "workspace_operation": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "repository_url",
                "git_hash",
                "mode",
                "inputs",
                "outputs",
                "repo_name",
                "workspace_operation"
              ]
            },
            "readOnly": true
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshAuthToken": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string"
          },
          "access": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "refresh"
        ]
      },
      "UserRegister": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "confirm_password": {
            "type": "string",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "password",
          "confirm_password",
          "email"
        ]
      },
      "UserActivate": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "token"
        ]
      },
      "ResendActivation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordResetConfirm": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "confirm_password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "uid",
          "token",
          "password",
          "confirm_password"
        ]
      },
      "PasswordReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordChange": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "confirm_password": {
            "type": "string",
            "writeOnly": true
          },
          "current_password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "password",
          "confirm_password",
          "current_password"
        ]
      },
      "SocialAuthToken": {
        "type": "object",
        "properties": {
          "provider_token": {
            "type": "string",
            "writeOnly": true
          },
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "provider_token"
        ]
      },
      "Upload": {
        "type": "object",
        "properties": {
          "owner_email": {
            "type": "string",
            "format": "email"
          },
          "resource_type": {
            "enum": [
              "FQ",
              "FA",
              "ALN",
              "FT",
              "MTX",
              "I_MTX",
              "EXP_MTX",
              "RNASEQ_COUNT_MTX",
              "ANN",
              "BED",
              "JSON",
              "*"
            ],
            "type": "string"
          },
          "upload_file": {
            "type": "string",
            "format": "binary"
          },
          "is_public": {
            "type": "boolean"
          },
          "is_ownerless": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "upload_file"
        ]
      },
      "DropboxUpload": {
        "type": "object",
        "properties": {
          "download_link": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "download_link",
          "filename"
        ]
      }
    }
  }
}