upstream mev_app {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server unix:/tmp/gunicorn.sock fail_timeout=0;
}

# This map helps in situations where the request doesn't reach the 
# gunicorn application server. An example is when the payload 
# exceeds the client_max_body_size. In that case, nginx immediately 
# responds with a 413, and the frontend is unable to 
# see the response since it was lacking the 'Access-Control-Allow-Origin'
# header. This map skips editing in the case where this header exists and
# adds it in the case where it does not.
map $upstream_http_access_control_allow_origin $corsorigin {
  default '';
  '' $http_origin;
}

server {
    listen      80;
    server_name "";
    return      444;
}

server {

    listen 80;
    server_name __SERVER_NAME__;

    location / {
        add_header 'Access-Control-Allow-Origin' $corsorigin always;
        proxy_pass http://mev_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_redirect off;

        client_max_body_size 256M;
    }

    location /static/ {
        alias /www/static/;
    }
}
